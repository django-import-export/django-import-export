name: test

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB_NAME: import_export
      IMPORT_EXPORT_POSTGRESQL_USER: postgres
      IMPORT_EXPORT_POSTGRESQL_PASSWORD: somepass
      IMPORT_EXPORT_MYSQL_USER: root
      IMPORT_EXPORT_MYSQL_PASSWORD: root
    strategy:
      fail-fast: true
      matrix:
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ env.IMPORT_EXPORT_POSTGRESQL_USER }}
          POSTGRES_PASSWORD: ${{ env.IMPORT_EXPORT_POSTGRESQL_PASSWORD }}
          POSTGRES_DB: ${{ env.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Set up MySQL
      run: >
        sudo /etc/init.d/mysql start

        mysql -e 'CREATE DATABASE ${{ env.DB_NAME }};'
        -u${{ env.IMPORT_EXPORT_MYSQL_USER }}
        -p${{ env.IMPORT_EXPORT_MYSQL_PASSWORD }}
    - name: Check out repository code
      uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox coverage
    - name: Run tox targets for ${{ matrix.python-version }} (sqlite)
      run: |
        tox run -f py$(echo ${{ matrix.python-version }} | tr -d .)
        coverage_file=$(ls .coverage.* 2>/dev/null | grep -v '.coveragerc' | head -1)
        if [ -n "$coverage_file" ] && [ -f "$coverage_file" ]; then
          cp "$coverage_file" .coverage.sqlite
          echo "Coverage file $coverage_file copied to .coverage.sqlite"
        else
          echo "No coverage data file found"
          ls -la .coverage* || echo "No coverage files found"
          exit 1
        fi
    - name: Upload coverage data to coveralls.io (sqlite)
      uses: coverallsapp/github-action@v2
      with:
        parallel: true
        flag-name: py${{ matrix.python-version }}-sqlite
        file: .coverage.sqlite
        coverage-reporter-version: v0.6.15
    - name: Run tox targets for ${{ matrix.python-version }} (postgres)
      run: |
        tox run -f py$(echo ${{ matrix.python-version }} | tr -d .)
        coverage_file=$(ls .coverage.* 2>/dev/null | grep -v '.coveragerc' | head -1)
        if [ -n "$coverage_file" ] && [ -f "$coverage_file" ]; then
          cp "$coverage_file" .coverage.postgres
          echo "Coverage file $coverage_file copied to .coverage.postgres"
        else
          echo "No coverage data file found"
          ls -la .coverage* || echo "No coverage files found"
          exit 1
        fi
      env:
        IMPORT_EXPORT_TEST_TYPE: postgres
    - name: Upload coverage data to coveralls.io (postgres)
      uses: coverallsapp/github-action@v2
      with:
        parallel: true
        flag-name: py${{ matrix.python-version }}-postgres
        file: .coverage.postgres
        coverage-reporter-version: v0.6.15
    - name: Run tox targets for ${{ matrix.python-version }} (mysql)
      run: |
        tox run -f py$(echo ${{ matrix.python-version }} | tr -d .)
        coverage_file=$(ls .coverage.* 2>/dev/null | grep -v '.coveragerc' | head -1)
        if [ -n "$coverage_file" ] && [ -f "$coverage_file" ]; then
          cp "$coverage_file" .coverage.mysql
          echo "Coverage file $coverage_file copied to .coverage.mysql"
        else
          echo "No coverage data file found"
          ls -la .coverage* || echo "No coverage files found"
          exit 1
        fi
      env:
        IMPORT_EXPORT_TEST_TYPE: mysql-innodb
    - name: Upload coverage data to coveralls.io (mysql)
      uses: coverallsapp/github-action@v2
      with:
        parallel: true
        flag-name: py${{ matrix.python-version }}-mysql
        file: .coverage.mysql
        coverage-reporter-version: v0.6.15

  coveralls:
    name: Indicate completion to coveralls.io
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Finished
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
          coverage-reporter-version: v0.6.15
          carryforward: >-
            py3.9-sqlite,py3.9-postgres,py3.9-mysql,
            py3.10-sqlite,py3.10-postgres,py3.10-mysql,
            py3.11-sqlite,py3.11-postgres,py3.11-mysql,
            py3.12-sqlite,py3.12-postgres,py3.12-mysql
